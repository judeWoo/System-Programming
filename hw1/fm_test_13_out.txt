HISTORY: THE SETTING THE LATE 1960S WERE A TURBULENT ERA FOR COMPUTER SYSTEMS RESEARCH AT BELL TELEPHONE LABORATORIES (RITCHIE 78) (RITCHIE 84). THE COMPANY WAS PULLING OUT OF THE MULTICS PROJECT (ORGANICK 75), WHICH HAD STARTED AS A JOINT VENTURE OF MIT, GENERAL ELECTRIC, AND BELL LABS; BY 1969, BELL LABS MANAGEMENT, AND EVEN THE RESEARCHERS, CAME TO BELIEVE THAT THE PROMISES OF MULTICS COULD BE FULFILLED ONLY TOO LATE AND TOO EXPENSIVELY. EVEN BEFORE THE GE-645 KULTICS MACHINE WAS REMOVED FROM THE PREMISES, AN INFORMAL GROUP, LED PRIMARILY BY KEN THOMPSON, HAD BEGUN INVESTIGATING ALTERNATIVES. THOMPSON WAS FACED WITH A HARDWARE ENVIRONMENT CRAMPED AND SPARTAN EVEN FOR THE TIME: THE DEC PDP-7 ON WHICH HE STARTED IN 1968 WAS A MACHINE WITH 8K 18-BIT WORDS OF MEMORY AND NO SOFTWARE USEFUL TO HIM. WHILE WANTING TO USE A HIGHER-LEVEL LANGUAGE, HE WROTE THE ORIGINAL UNIX SYSTEM IN PDP-7 ASSEMBLER. AT THE START, HE DID NOT EVEN PROGRAM ON THE PDP-7 ITSELF, BUT INSTEAD USED A SET OF MACROS FOR THE GEMAP ASSEMBLER ON A GE-635 KACHINE. A POSTPROCESSOR GENERATED A PAPER TAPE READABLE BY THE PDP-7. THESE TAPES WERE CARRIED FROM THE GE MACHINE TO THE PDP-7 FOR TESTING UNTIL A PRIMITIVE UNIX KERNEL, AN EDITOR, AN ASSEMBLER, A SIMPLE SHELL (COMMAND INTERPRETER), AND A FEW UTILITIES (LIKE THE UNIX RM, CAT, CP COMMANDS) WERE COMPLETED. AFTER THIS POINT, THE OPERATING SYSTEM WAS SELF-SUPPORTING: PROGRAMS COULD BE WRITTEN AND TESTED WITHOUT RESORT TO PAPER TAPE, AND DEVELOPMENT CONTINUED ON THE PDP-7 ITSELF. THOMPSON'S PDP-7 ASSEMBLER OUTDID EVEN DEC'S IN SIMPLICITY; IT EVALUATED EXPRESSIONS AND EMITTED THE CORRESPONDING BITS. THERE WERE NO LIBRARIES, NO LOADER OR LINK EDITOR: THE ENTIRE SOURCE OF A PROGRAM WAS PRESENTED TO THE ASSEMBLER, AND THE OUTPUT FILE?WITH A FIXED NAME?THAT EMERGED WAS DIRECTLY EXECUTABLE. (THIS NAME, A.OUT, EXPLAINS A BIT OF UNIX ETYMOLOGY; IT IS THE OUTPUT OF THE ASSEMBLER. EVEN AFTER THE SYSTEM GAINED A LINKER AND A MEANS OF SPECIFYING ANOTHER NAME EXPLICITLY, IT WAS RETAINED AS THE DEFAULT EXECUTABLE RESULT OF A COMPILATION.) NOT LONG AFTER UNIXA FIRST RAN ON THE PDP-7, IN 1969, DOUG MCILROY CREATED THE NEW SYSTEM'S FIRST HIGHER-LEVEL LANGUAGE: AN IMPLEMENTATION OF MCCLURE'S TMG (MCCLURE 65). TMG IS A LANGUAGE FOR WRITING COMPILERS (MORE GENERALLY, TRANSMOGRIFIERS) IN A TOP-DOWN, RECURSIVE-DESCENT STYLE THAT COMBINES CONTEXT-FREE SYNTAX NOTATION WITH PROCEDURAL ELEMENTS. MCILROY AND BOB MORRIS HAD USED TMG TO WRITE THE EARLY PLI COMPILER FOR MULTICS. CHALLENGED BY MCILROY'S FEAT IN REPRODUCING TMG, THOMPSON DECIDED THAT UNIX?POSSIBLY IT HAD NOT EVEN BEEN NAMED YET?NEEDED A SYSTEM PROGRAMMING LANGUAGE. AFTER A RAPIDLY SCUTTLED ATTEMPT AT FORTRAN, HE CREATED INSTEAD A LANGUAGE OF HIS OWN, WHICH HE CALLED B. B CAN BE THOUGHT OF AS C WITHOUT TYPES; MORE ACCURATELY, IT IS BCPL SQUEEZED INTO 8K BYTES OF MEMORY AND FILTERED THROUGH THOMPSON'S BRAIN. ITS NAME MOST PROBABLY REPRESENTS A CONTRACTION OF BCPL, THOUGH AN ALTERNATE THEORY HOLDS THAT IT DERIVES FROM BON (THOMPSON 69), AN UNRELATED LANGUAGE CREATED BY THOMPSON DURING THE MULTICS DAYS. BON IN TURN WAS NAMED EITHER AFTER HIS WIFE BONNIE, OR (ACCORDING TO AN ENCYCLOPEDIA QUOTATION IN ITS MANUAL), AFTER A RELIGION WHOSE RITUALS INVOLVE THE MURMURING OF MAGIC FORMULAS.
