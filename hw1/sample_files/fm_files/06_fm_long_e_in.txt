PORTABILITY BY EARLY 1973, THE ESSENTIALS OF MODERN C WERE COMPLETE. THE LANGUAGE AND COMPILER WERE STRONG ENOUGH TO PERMIT US TO REWRITE THE UNIX KERNEL FOR THE PDP-11 IN C DURING THE SUMMER OF THAT YEAR. (THOMPSON HAD MADE A BRIEF ATTEMPT TO PRODUCE A SYSTEM CODED IN AN EARLY VERSION OF C?BEFORE STRUCTURES?IN 1972, BUT GAVE UP THE EFFORT.) ALSO DURING THIS PERIOD, THE COMPILER WAS RETARGETED TO OTHER NEARBY MACHINES, PARTICULARLY THE HONEYWELL 635 AND IBM 360370; BECAUSE THE LANGUAGE COULD NOT LIVE IN ISOLATION, THE PROTOTYPES FOR THE MODERN LIBRARIES WERE DEVELOPED. IN PARTICULAR, LESK WROTE A 'PORTABLE IO PACKAGE' (LESK 72) THAT WAS LATER REWORKED TO BECOME THE C 'STANDARD IO' ROUTINES. IN 1978 BRIAN KERNIGHAN AND I PUBLISHED THE C PROGRAMMING LANGUAGE (KERNIGHAN 78). ALTHOUGH IT DID NOT DESCRIBE SOME ADDITIONS THAT SOON BECAME COMMON, THIS BOOK SERVED AS THE LANGUAGE REFERENCE UNTIL A FORMAL STANDARD WAS ADOPTED MORE THAN TEN YEARS LATER. ALTHOUGH WE WORKED CLOSELY TOGETHER ON THIS BOOK, THERE WAS A CLEAR DIVISION OF LABOR: KERNIGHAN WROTE ALMOST ALL THE EXPOSITORY MATERIAL, WHILE I WAS RESPONSIBLE FOR THE APPENDIX CONTAINING THE REFERENCE MANUAL AND THE CHAPTER ON INTERFACING WITH THE UNIX SYSTEM. DURING 1973-1980, THE LANGUAGE GREW A BIT: THE TYPE STRUCTURE GAINED UNSIGNED, LONG, UNION, AND ENUMERATION TYPES, AND STRUCTURES BECAME NEARLY FIRST-CLASS OBJECTS (LACKING ONLY A NOTATION FOR LITERALS). EQUALLY IMPORTANT DEVELOPMENTS APPEARED IN ITS ENVIRONMENT AND THE ACCOMPANYING TECHNOLOGY. WRITING THE UNIX KERNEL IN C HAD GIVEN US ENOUGH CONFIDENCE IN THE LANGUAGE'S USEFULNESS AND EFFICIENCY THAT WE BEGAN TO RECODE THE SYSTEM'S UTILITIES AND TOOLS AS WELL, AND THEN TO MOVE THE MOST INTERESTING AMONG THEM TO THE OTHER PLATFORMS. AS DESCRIBED IN (JOHNSON 78A), WE DISCOVERED THAT THE HARDEST PROBLEMS IN PROPAGATING UNIX TOOLS LAY NOT IN THE INTERACTION OF THE C LANGUAGE WITH NEW HARDWARE, BUT IN ADAPTING TO THE EXISTING SOFTWARE OF OTHER OPERATING SYSTEMS. THUS STEVE JOHNSON BEGAN TO WORK ON PCC, A C COMPILER INTENDED TO BE EASY TO RETARGET TO NEW MACHINES (JOHNSON 78B), WHILE HE, THOMPSON, AND I BEGAN TO MOVE THE UNIX SYSTEM ITSELF TO THE INTERDATA 832 COMPUTER. THE LANGUAGE CHANGES DURING THIS PERIOD, ESPECIALLY AROUND 1977, WERE LARGELY FOCUSED ON CONSIDERATIONS OF PORTABILITY AND TYPE SAFETY, IN AN EFFORT TO COPE WITH THE PROBLEMS WE FORESAW AND OBSERVED IN MOVING A CONSIDERABLE BODY OF CODE TO THE NEW INTERDATA PLATFORM. C AT THAT TIME STILL MANIFESTED STRONG SIGNS OF ITS TYPELESS ORIGINS. POINTERS, FOR EXAMPLE, WERE BARELY DISTINGUISHED FROM INTEGRAL MEMORY INDICES IN EARLY LANGUAGE MANUALS OR EXTANT CODE; THE SIMILARITY OF THE ARITHMETIC PROPERTIES OF CHARACTER POINTERS AND UNSIGNED INTEGERS MADE IT HARD TO RESIST THE TEMPTATION TO IDENTIFY THEM. THE UNSIGNED TYPES WERE ADDED TO MAKE UNSIGNED ARITHMETIC AVAILABLE WITHOUT CONFUSING IT WITH POINTER MANIPULATION. SIMILARLY, THE EARLY LANGUAGE CONDONED ASSIGNMENTS BETWEEN INTEGERS AND POINTERS, BUT THIS PRACTICE BEGAN TO BE DISCOURAGED; A NOTATION FOR TYPE CONVERSIONS (CALLED 'CASTS' FROM THE EXAMPLE OF ALGOL 68) WAS INVENTED TO SPECIFY TYPE CONVERSIONS MORE EXPLICITLY. BEGUILED BY THE EXAMPLE OF PLI, EARLY C DID NOT TIE STRUCTURE POINTERS FIRMLY TO THE STRUCTURES THEY POINTED TO, AND PERMITTED PROGRAMMERS TO WRITE POINTER-MEMBER ALMOST WITHOUT REGARD TO THE TYPE OF POINTER; SUCH AN EXPRESSION WAS TAKEN UNCRITICALLY AS A REFERENCE TO A REGION OF MEMORY DESIGNATED BY THE POINTER, WHILE THE MEMBER NAME SPECIFIED ONLY AN OFFSET AND A TYPE. ALTHOUGH THE FIRST EDITION OF K AND R DESCRIBED MOST OF THE RULES THAT BROUGHT C'S TYPE STRUCTURE TO ITS PRESENT FORM, MANY PROGRAMS WRITTEN IN THE OLDER, MORE RELAXED STYLE PERSISTED, AND SO DID COMPILERS THAT TOLERATED IT. TO ENCOURAGE PEOPLE TO PAY MORE ATTENTION TO THE OFFICIAL LANGUAGE RULES, TO DETECT LEGAL BUT SUSPICIOUS CONSTRUCTIONS, AND TO HELP FIND INTERFACE MISMATCHES UNDETECTABLE WITH SIMPLE MECHANISMS FOR SEPARATE COMPILATION, STEVE JOHNSON ADAPTED HIS PCC COMPILER TO PRODUCE LINT (JOHNSON 79B), WHICH SCANNED A SET OF FILES AND REMARKED ON DUBIOUS CONSTRUCTIONS.
